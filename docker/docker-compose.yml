version: "3.8" # Utilise la version 3.8 de Docker Compose

services:
  # Service principal pour le script de scraping (notre "Scanner")
  blue_scanner:
    build: . # Docker va chercher un Dockerfile dans le répertoire actuel
    container_name: alexandria_blue_scanner
    restart: on-failure # Redémarre le conteneur s'il échoue
    volumes:
      - .:/app # Monte le répertoire actuel (où se trouve le Dockerfile et tes scripts Python) dans /app du conteneur
      - ./data:/app/data # Crée un volume persistant pour stocker les données scrappées
    environment:
      # Ici, tu pourrais ajouter des variables d'environnement si nécessaire
      # Par exemple, des clés d'API, des identifiants (NE PAS mettre d'infos sensibles ici directement)
      # - AMAZON_REGION=ca
      # - MIN_PROFIT_THRESHOLD=50
      TZ: "America/Montreal" # Définit le fuseau horaire du conteneur
    # Si tu as besoin d'exécuter une commande spécifique au démarrage du scanner
    # command: python /app/scanner.py

  # Un service optionnel pour une base de données locale (ex: SQLite pour les données)
  # Ce service est commenté pour l'instant, mais prêt à être activé si besoin.
  # db:
  #   image: postgres:13-alpine # Exemple avec PostgreSQL léger
  #   container_name: alexandria_blue_db
  #   restart: always
  #   environment:
  #     POSTGRES_DB: alexandria_db
  #     POSTGRES_USER: alexandria_user
  #     POSTGRES_PASSWORD: your_strong_password_here # CHANGE THIS
  #   volumes:
  #     - blue_db_data:/var/lib/postgresql/data # Volume persistant pour la base de données

# Volumes nommés pour la persistance des données
volumes:
  blue_db_data: # Pour la base de données (si activé)
  # Tu peux ajouter d'autres volumes si tu as des besoins spécifiques de persistance
